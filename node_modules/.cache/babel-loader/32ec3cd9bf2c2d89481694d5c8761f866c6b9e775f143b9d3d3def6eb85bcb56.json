{"ast":null,"code":"import { Component } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nlet captcha_value = '';\nlet captcha_number = '';\nlet backgroundColor_value = '';\nlet fontColor_value = '';\nlet charMap_value = '';\nlet LoadCanvasTemplate_HTML = \"<div><canvas id=\\\"canv\\\"></canvas><div><a id=\\\"reload_href\\\"  style=\\\"cursor: pointer; color: blue\\\">Reload Captcha</a></div></div>\";\nlet LoadCanvasTemplateNoReload_HTML = \"<div><canvas id=\\\"canv\\\"></canvas><div><a id=\\\"reload_href\\\"  style=\\\"cursor: pointer; color: blue\\\"></a></div></div>\";\n;\nexport const loadCaptchaEnginge = (numberOfCharacters, backgroundColor = 'white', fontColor = 'black', charMap = '') => {\n  backgroundColor_value = backgroundColor;\n  fontColor_value = fontColor;\n  charMap_value = charMap;\n  captcha_number = numberOfCharacters;\n  let retVal = \"\";\n  let charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  if (charMap === \"upper\") {\n    charset = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  } else if (charMap === \"lower\") {\n    charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  } else if (charMap === \"numbers\") {\n    charset = \"0123456789\";\n  } else if (charMap === \"special_char\") {\n    charset = \"~`!@#$%^&*()_+-=[]{}\\|:'<>,.?/\";\n  }\n  let length = parseInt(numberOfCharacters);\n  for (let i = 0, n = charset.length; i < length; ++i) {\n    retVal += charset.charAt(Math.floor(Math.random() * n));\n  }\n  let captcha = retVal;\n  captcha_value = captcha;\n  let length_height_canvas = Math.round(parseInt(length) / 3);\n  let canvas = document.getElementById('canv'),\n    ctx = canvas.getContext('2d'),\n    img = document.getElementById('image');\n  let text = captcha;\n  let x = 12.5;\n  let y = 15;\n  let lineheight = 30;\n  let canvas_height = (parseInt(length) - parseInt(length_height_canvas)) * 20;\n  let lines = text.split('\\n');\n  let lineLengthOrder = lines.slice(0).sort(function (a, b) {\n    return b.length - a.length;\n  });\n  ctx.canvas.width = parseInt(length) * 25;\n  ctx.canvas.height = lines.length * lineheight;\n  ctx.fillStyle = backgroundColor;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.textBaseline = \"middle\";\n  ctx.font = \"italic 20px Arial\";\n  ctx.fillStyle = fontColor;\n  let num = 0;\n  for (let i = 0; i < parseInt(length); i++) {\n    num = parseInt(num) + 1;\n    let heigt_num = 20 * num;\n    ctx.fillText(retVal[i], heigt_num, Math.round(Math.random() * (15 - 12) + 12));\n  }\n  document.getElementById(\"reload_href\").onclick = function () {\n    loadCaptchaEnginge(captcha_number, backgroundColor, fontColor, charMap);\n  };\n};\nexport const validateCaptcha = (userValue, reload = true) => {\n  if (userValue != captcha_value) {\n    if (reload == true) {\n      loadCaptchaEnginge(captcha_number, backgroundColor_value, fontColor_value, charMap_value);\n    }\n    return false;\n  } else {\n    return true;\n  }\n};\nexport class LoadCanvasTemplate extends Component {\n  render() {\n    let reload_text = \"\";\n    let reload_color = \"\";\n    LoadCanvasTemplate_HTML = \"<div><canvas id=\\\"canv\\\" style=\\\"background-color: blue;\\\"></canvas><div><a id=\\\"reload_href\\\"  style=\\\"cursor: pointer; color: blue\\\">Reload Captcha</a></div></div>\";\n    if (this.props.reloadText) {\n      reload_text = this.props.reloadText;\n    }\n    if (this.props.reloadColor) {\n      reload_color = this.props.reloadColor;\n    }\n    if (reload_text == \"\") {\n      reload_text = \"Reload Captcha\";\n    }\n    if (reload_color == \"\") {\n      reload_color = \"blue\";\n    }\n    LoadCanvasTemplate_HTML = \"<div><canvas id=\\\"canv\\\"></canvas><div><a id=\\\"reload_href\\\"  style=\\\"cursor: pointer; color: \" + reload_color + \"\\\">\" + reload_text + \"</a></div></div>\";\n    return ReactHtmlParser(LoadCanvasTemplate_HTML);\n  }\n}\n;\nexport class LoadCanvasTemplateNoReload extends Component {\n  render() {\n    return ReactHtmlParser(LoadCanvasTemplateNoReload_HTML);\n  }\n}\n;","map":{"version":3,"names":["Component","ReactHtmlParser","captcha_value","captcha_number","backgroundColor_value","fontColor_value","charMap_value","LoadCanvasTemplate_HTML","LoadCanvasTemplateNoReload_HTML","loadCaptchaEnginge","numberOfCharacters","backgroundColor","fontColor","charMap","retVal","charset","length","parseInt","i","n","charAt","Math","floor","random","captcha","length_height_canvas","round","canvas","document","getElementById","ctx","getContext","img","text","x","y","lineheight","canvas_height","lines","split","lineLengthOrder","slice","sort","a","b","width","height","fillStyle","fillRect","textBaseline","font","num","heigt_num","fillText","onclick","validateCaptcha","userValue","reload","LoadCanvasTemplate","render","reload_text","reload_color","props","reloadText","reloadColor","LoadCanvasTemplateNoReload"],"sources":["C:/Users/somna/OneDrive/Documents/Maths/Rec/Online_Voting2/client/node_modules/react-simple-captcha/react-simple-captcha.js"],"sourcesContent":["import { Component } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\n\nlet captcha_value = '';\nlet captcha_number = '';\nlet backgroundColor_value = '';\nlet fontColor_value = '';\nlet charMap_value = '';\nlet LoadCanvasTemplate_HTML = \"<div><canvas id=\\\"canv\\\"></canvas><div><a id=\\\"reload_href\\\"  style=\\\"cursor: pointer; color: blue\\\">Reload Captcha</a></div></div>\";\nlet LoadCanvasTemplateNoReload_HTML = \"<div><canvas id=\\\"canv\\\"></canvas><div><a id=\\\"reload_href\\\"  style=\\\"cursor: pointer; color: blue\\\"></a></div></div>\";;\n\n\nexport const loadCaptchaEnginge = (numberOfCharacters, backgroundColor = 'white', fontColor = 'black', charMap = '') => {\n\n    backgroundColor_value = backgroundColor;\n    fontColor_value = fontColor;\n    charMap_value = charMap;\n    captcha_number = numberOfCharacters;\n    let retVal = \"\";\n    let charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    if (charMap === \"upper\") {\n        charset = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    } else if (charMap === \"lower\") {\n        charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    }\n    else if (charMap === \"numbers\") {\n        charset = \"0123456789\";\n    }\n    else if (charMap === \"special_char\") {\n        charset = \"~`!@#$%^&*()_+-=[]{}\\|:'<>,.?/\";\n    }\n\n    let length = parseInt(numberOfCharacters);\n\n\n\n    for (let i = 0, n = charset.length; i < length; ++i) {\n        retVal += charset.charAt(Math.floor(Math.random() * n));\n    }\n\n    let captcha = retVal;\n\n    captcha_value = captcha;\n\n\n\n    let length_height_canvas = Math.round(parseInt(length) / 3);\n\n    let canvas = document.getElementById('canv'),\n        ctx = canvas.getContext('2d'),\n        img = document.getElementById('image');\n    let text = captcha;\n    let x = 12.5;\n    let y = 15;\n    let lineheight = 30;\n\n    let canvas_height = (parseInt(length) - parseInt(length_height_canvas)) * 20;\n    let lines = text.split('\\n');\n    let lineLengthOrder = lines.slice(0).sort(function (a, b) {\n        return b.length - a.length;\n    });\n    ctx.canvas.width = parseInt(length) * 25;\n    ctx.canvas.height = (lines.length * lineheight);\n\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n\n    ctx.textBaseline = \"middle\";\n    ctx.font = \"italic 20px Arial\";\n    ctx.fillStyle = fontColor;\n\n\n\n\n    let num = 0;\n    for (let i = 0; i < parseInt(length); i++) {\n        num = parseInt(num) + 1;\n        let heigt_num = 20 * num;\n        ctx.fillText(retVal[i], heigt_num, Math.round(Math.random() * (15 - 12) + 12));\n    }\n\n    document.getElementById(\"reload_href\").onclick = function () {\n        loadCaptchaEnginge(captcha_number, backgroundColor, fontColor, charMap);\n    }\n\n};\n\nexport const validateCaptcha = (userValue, reload = true) => {\n    if (userValue != captcha_value) {\n        if (reload == true) {\n            loadCaptchaEnginge(captcha_number, backgroundColor_value, fontColor_value, charMap_value);\n        }\n\n        return false;\n    }\n\n    else {\n        return true;\n    }\n};\n\nexport class LoadCanvasTemplate extends Component {\n\n    render() {\n        let reload_text = \"\";\n        let reload_color = \"\";\n        LoadCanvasTemplate_HTML = \"<div><canvas id=\\\"canv\\\" style=\\\"background-color: blue;\\\"></canvas><div><a id=\\\"reload_href\\\"  style=\\\"cursor: pointer; color: blue\\\">Reload Captcha</a></div></div>\";\n\n        if (this.props.reloadText) {\n            reload_text = this.props.reloadText;\n\n\n        }\n\n        if (this.props.reloadColor) {\n            reload_color = this.props.reloadColor;\n        }\n\n        if (reload_text == \"\") {\n            reload_text = \"Reload Captcha\";\n        }\n\n        if (reload_color == \"\") {\n            reload_color = \"blue\";\n        }\n\n        LoadCanvasTemplate_HTML = \"<div><canvas id=\\\"canv\\\"></canvas><div><a id=\\\"reload_href\\\"  style=\\\"cursor: pointer; color: \" + reload_color + \"\\\">\" + reload_text + \"</a></div></div>\";\n\n        return (ReactHtmlParser(LoadCanvasTemplate_HTML));\n    }\n\n};\n\nexport class LoadCanvasTemplateNoReload extends Component {\n\n    render() {\n        return (ReactHtmlParser(LoadCanvasTemplateNoReload_HTML));\n    }\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}